{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/api/signin/route.ts"],"sourcesContent":["import { Prisma, PrismaClient } from \"@prisma/client\";\nimport { error } from \"console\"\nimport { create } from \"domain\";\nimport { NextRequest, NextResponse } from \"next/server\"\nimport bcrypt from 'bcrypt';\n\n\nconst createData = async (data:any) =>{\n    const dataPassword = passwordEncrypt(data.password)\n    console.log(\"SENHA: \"+dataPassword)\n    return dataPassword\n}\n\nconst passwordEncrypt = async (password: string) =>\n{\n    const saltRounds = 10; \n    const hashedPassword = await bcrypt.hash(password, saltRounds);\n    return hashedPassword;\n}\n\nexport async function POST(request: NextRequest){\n    try{\n        const body = await request.json();\n        const data = await createData(body)\n        //verifica√ßao zod\n\n        return new NextResponse(data)\n    }\n    catch{\n        return error\n    }\n}"],"names":[],"mappings":";;;AACA;AAEA;;;;;;;;;AAIA,MAAM,aAAa,OAAO;IACtB,MAAM,eAAe,gBAAgB,KAAK,QAAQ;IAClD,QAAQ,GAAG,CAAC,YAAU;IACtB,OAAO;AACX;AAEA,MAAM,kBAAkB,OAAO;IAE3B,MAAM,aAAa;IACnB,MAAM,iBAAiB,MAAM,OAAO,IAAI,CAAC,UAAU;IACnD,OAAO;AACX;AAEO,eAAe,KAAK,OAAoB;IAC3C,IAAG;QACC,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,OAAO,MAAM,WAAW;QAC9B,iBAAiB;QAEjB,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC;IAC5B,EACA,OAAK;QACD,OAAO,gGAAA,CAAA,QAAK;IAChB;AACJ"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}